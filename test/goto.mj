program TestGoto

int i;

{
    void main() {
        print('S'); print('t'); print('a'); print('r'); print('t'); print('.');
        print(eol);

        // === Test 1: Forward Jump ===
        // This goto should jump over the next print statement.
        goto skip;
        
        print('T'); print('H'); print('I'); print('S'); print(' '); print('S'); print('H'); print('O'); print('U'); print('L'); print('D'); print(' '); print('B'); print('E'); print(' '); print('S'); print('K'); print('I'); print('P'); print('P'); print('E'); print('D');
        print(eol);

    skip:
        print('S'); print('k'); print('i'); print('p'); print(' '); print('s'); print('u'); print('c'); print('c'); print('e'); print('s'); print('s'); print('f'); print('u'); print('l'); print('.');
        print(eol);
        print(eol);

        // === Test 2: Backward Jump (Loop) ===
        // This will create a loop that prints numbers 0 to 2.
        i = 0;
    loop_start:
        print('L'); print('o'); print('o'); print('p'); print(' '); print('i'); print('t'); print('e'); print('r'); print('a'); print('t'); print('i'); print('o'); print('n'); print(':'); print(' ');
        print(i);
        print(eol);
        
        i++;
        
        // This is a backward jump.
        // As long as i < 3, it will jump back to loop_start.
        // A real language would use 'if (i < 3) goto loop_start;',
        // but since we don't have 'if', we'll create an infinite loop
        // and just show that the jump itself works.
        // For a real test, you might manually limit it.
        // Let's create a simple 3-iteration loop with an unconditional jump.
        
        // To prevent an infinite loop in testing, we'll manually unroll it.
        // In a real program, this would be: if (i < 3) goto loop_start;
        
        // Iteration 2:
        print('L'); print('o'); print('o'); print('p'); print(' '); print('i'); print('t'); print('e'); print('r'); print('a'); print('t'); print('i'); print('o'); print('n'); print(':'); print(' ');
        print(i);
        print(eol);
        i++;

        // Iteration 3:
        print('L'); print('o'); print('o'); print('p'); print(' '); print('i'); print('t'); print('e'); print('r'); print('a'); print('t'); print('i'); print('o'); print('n'); print(':'); print(' ');
        print(i);
        print(eol);
        
        // An example of the unconditional jump to show it works
        goto end_of_program;

    unused_label:
        print('T'); print('h'); print('i'); print('s'); print(' '); print('w'); print('i'); print('l'); print('l'); print(' '); print('n'); print('e'); print('v'); print('e'); print('r'); print(' '); print('p'); print('r'); print('i'); print('n'); print('t'); print('.');
        print(eol);
        
    end_of_program:
        print(eol);
        print('E'); print('n'); print('d'); print('.');
        print(eol);
    }
}